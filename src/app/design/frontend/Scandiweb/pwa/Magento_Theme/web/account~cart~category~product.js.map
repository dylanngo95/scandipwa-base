{"version":3,"sources":["webpack:////var/www/public/vendor/scandipwa/source/src/app/component/ExpandableContent/ExpandableContent.component.js","webpack:////var/www/public/vendor/scandipwa/source/src/app/component/ExpandableContent/ExpandableContent.style.scss","webpack:////var/www/public/vendor/scandipwa/source/src/app/component/ExpandableContent/index.js"],"names":["ExpandableContent","createRef","onClick","props","setState","isContentExpanded","scrollToExpandedContent","state","prevIsContentExpanded","coveringElementsIds","elem","expandableContentRef","current","elemToWindowTopDist","getBoundingClientRect","top","windowToPageTopDist","document","body","topToElemDistance","coveringElementsHeight","reduce","acc","elementId","coveringElement","getElementById","offsetHeight","scrollTo","screen","height","window","heading","subHeading","mix","toggleExpand","children","mods","renderButton","renderContent","Object","defineProperty","_ExpandableContent","value","PropTypes","bool","oneOfType","string","object","ChildrenType","isRequired","MixType","propName","componentName","propValue","Error"],"mappings":"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","file":"account~cart~category~product.js","sourcesContent":["/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright Â© Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\nimport PropTypes from 'prop-types';\nimport { createRef, PureComponent } from 'react';\n\nimport TextPlaceholder from 'Component/TextPlaceholder';\nimport { ChildrenType, MixType } from 'Type/Common';\n\nimport './ExpandableContent.style';\n/** @namespace Component/ExpandableContent/Component */\nexport class ExpandableContent extends PureComponent {\n    static propTypes = {\n        isContentExpanded: PropTypes.bool,\n        heading: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\n        subHeading: PropTypes.string,\n        children: ChildrenType.isRequired,\n        mix: MixType.isRequired,\n        onClick: (props, propName, componentName) => {\n            const propValue = props[propName];\n            if (propValue === null) {\n                return;\n            }\n            if (typeof propValue === 'function') {\n                return;\n            }\n            throw new Error(`${componentName} only accepts null or string`);\n        }\n    };\n\n    static defaultProps = {\n        subHeading: '',\n        heading: '',\n        isContentExpanded: false,\n        onClick: null\n    };\n\n    expandableContentRef = createRef();\n\n    __construct(props) {\n        super.__construct(props);\n        const { isContentExpanded } = this.props;\n        this.state = {\n            isContentExpanded,\n            // eslint-disable-next-line react/no-unused-state\n            prevIsContentExpanded: isContentExpanded\n        };\n    }\n\n    static getDerivedStateFromProps({ isContentExpanded }, { prevIsContentExpanded }) {\n        if (isContentExpanded !== prevIsContentExpanded) {\n            return {\n                prevIsContentExpanded: isContentExpanded,\n                isContentExpanded\n            };\n        }\n\n        return null;\n    }\n\n    scrollToExpandedContent(coveringElementsIds) {\n        const { isContentExpanded } = this.state;\n        const elem = this.expandableContentRef && this.expandableContentRef.current;\n        if (isContentExpanded && !elem) {\n            return;\n        }\n        const elemToWindowTopDist = elem.getBoundingClientRect().top;\n        const windowToPageTopDist = document.body.getBoundingClientRect().top;\n        const topToElemDistance = elemToWindowTopDist - windowToPageTopDist;\n        const coveringElementsHeight = coveringElementsIds.reduce(\n            (acc, elementId) => {\n                const coveringElement = document.getElementById(elementId);\n\n                if (!coveringElement) {\n                    return acc;\n                }\n\n                return acc + coveringElement.offsetHeight;\n            },\n            0\n        );\n        const scrollTo = topToElemDistance - (screen.height - coveringElementsHeight - elem.offsetHeight);\n        // checking if button is in a view-port\n        if (-windowToPageTopDist >= scrollTo) {\n            return;\n        }\n        window.scrollTo(0, scrollTo);\n    }\n\n    toggleExpand = () => {\n        const { onClick } = this.props;\n        if (onClick) {\n            onClick();\n            return;\n        }\n        this.setState(\n            ({ isContentExpanded }) => ({ isContentExpanded: !isContentExpanded }),\n            () => this.scrollToExpandedContent(['NavigationTabs', 'ProductActionsWrapper', 'CartPageSummary'])\n        );\n    };\n\n    renderButton() {\n        const { isContentExpanded } = this.state;\n        const {\n            heading,\n            subHeading,\n            mix\n        } = this.props;\n\n        return (\n            <button\n              block=\"ExpandableContent\"\n              elem=\"Button\"\n              mods={ { isContentExpanded } }\n              mix={ { ...mix, elem: 'ExpandableContentButton' } }\n              onClick={ this.toggleExpand }\n            >\n                <span\n                  block=\"ExpandableContent\"\n                  elem=\"Heading\"\n                  mix={ { ...mix, elem: 'ExpandableContentHeading' } }\n                >\n                    { typeof heading === 'string' ? (\n                        <TextPlaceholder content={ heading } length=\"medium\" />\n                    ) : (\n                        heading\n                    ) }\n                </span>\n                <span\n                  block=\"ExpandableContent\"\n                  elem=\"SubHeading\"\n                  mix={ { ...mix, elem: 'ExpandableContentSubHeading' } }\n                >\n                    { subHeading }\n                </span>\n            </button>\n        );\n    }\n\n    renderContent() {\n        const { children, mix } = this.props;\n        const { isContentExpanded } = this.state;\n        const mods = { isContentExpanded };\n        return (\n            <div\n              block=\"ExpandableContent\"\n              elem=\"Content\"\n              mods={ mods }\n              ref={ this.expandableContentRef }\n              mix={ { ...mix, elem: 'ExpandableContentContent', mods } }\n            >\n                { children }\n            </div>\n        );\n    }\n\n    render() {\n        const { mix } = this.props;\n        return (\n            <article\n              block=\"ExpandableContent\"\n              mix={ mix }\n            >\n                { this.renderButton() }\n                { this.renderContent() }\n            </article>\n        );\n    }\n}\nexport default ExpandableContent;\n","// extracted by mini-css-extract-plugin\n    if(module.hot) {\n      // 1603192107227\n      var cssReload = require(\"!../../../../../../../app/design/frontend/Scandiweb/pwa/node_modules/css-hot-loader/hotModuleReplacement.js\")(module.id, {\"fileMap\":\"{fileName}\"});\n      module.hot.dispose(cssReload);\n      module.hot.accept(undefined, cssReload);;\n    }\n  ","/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright Â© Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\n\nexport { default } from './ExpandableContent.component';\n"],"sourceRoot":""}